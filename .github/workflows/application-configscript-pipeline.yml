name: application-configscript-pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - tst
          - stg
          - pro
      gitbranch:
        description: 'Select Git Branch to Clone'
        required: true
        default: 'feature/EC2-instance-role'
        type: choice
        options:
          - 'feature/EC2-instance-role'
          - 'dev'
          - 'tst'
          - 'main'

permissions:
  id-token: write
  contents: read

env:
  REPO_NAME: "data-marketplace-infrastructure"
  REPO_BASEDIR: "/home/ssm-user/src"
  BUCKET_NAME: "dm-fast-assets"
  BUCKET_FOLDER: "terraform"
  APPROVERS: "soydaner,JohnPalmerGDS,denis-davidov-gds"

jobs:
  RunConfigScript:
    name: RunConfigScript
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4.2.2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-session-name: RunConfigScript
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: RunConfigScriptEC2Instance
        id: RunConfigScriptEC2Instance
        uses: forgedconcepts/aws-ssm-send-command-action@v1.1.1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          targets: |
            [${{ secrets.INSTANCE_ID_NEW }}]
          document-name: AWS-RunShellScript
          parameters: |
            {"commands":[
              "#!/bin/bash","if [ -d ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ];then rm -fR ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ; fi",
              "su - ssm-user -c \"cd ${{ env.REPO_BASEDIR }} && git clone -b ${{ inputs.gitbranch }} --single-branch git@github.com:co-cddo/${{ env.REPO_NAME }}.git ${{ env.REPO_NAME }} \"",
              "su - ssm-user -c \"cd ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }}/app-fast/ && ./config/config.sh ${{ inputs.environment }} \"",
              "#!/bin/bash","if [ -d ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ];then rm -fR ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ; fi"
            ]}
