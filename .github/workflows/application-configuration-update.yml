name: application-deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'Dev'
        type: choice
        options:
          - dev
          - tst
        # - pro
        # - stg
      gitbranch:
        description: 'Select Git Branch to Clone'
        required: true
        default: 'feature/jp-gitactions'
        type: choice
        options:
          - 'feature/jp-gitactions'
          - 'main'
      AppDeployChoice:
        type: choice
        description: 'App Deploy Choices'
        required: true
        default: 'install'
        options:
          - 'install'
          - 'update'
          - 'uninstall'


permissions:
  id-token: write
  contents: read

env:
  REPO_NAME: "data-marketplace-infrastructure"
  REPO_BASEDIR: "/home/ssm-user/src"
  BUCKET_NAME: "dm-fast-assets"
  BUCKET_FOLDER: "terraform"
  APPROVERS: "soydaner,JohnPalmerGDS,denis-davidov-gds"

jobs:
  set-timestamp:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
      - name: Set Timestamp
        id: timestamp
        run: echo "timestamp=$(date +"%Y%m%d%H%M%S")" >> $GITHUB_OUTPUT

  use-timestamp:
    needs: set-timestamp
    runs-on: ubuntu-latest
    steps:
      - name: Use Timestamp
        run: echo "Timestamp is ${{ needs.set-timestamp.outputs.timestamp }}"
        env:
          TIMESTAMP: ${{ needs.set-timestamp.outputs.timestamp }}

  TerraformInitPlanOnly:
    name: TerraformInitPlanOnly
    runs-on: ubuntu-latest
    if: inputs.AppDeployChoice == 'install'

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4.2.2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-session-name: github-actions
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: CloneAndRunDeploySh
        id: CloneAndRunDeploySh
        uses: forgedconcepts/aws-ssm-send-command-action@v1.1.1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          targets: |
            [${{ secrets.INSTANCE_ID_NEW }}]
          document-name: AWS-RunShellScript
          parameters: |
            {"commands":[
              "#!/bin/bash","if [ -d ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ];then rm -fR ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ; fi",
              "su - ssm-user -c \"cd ${{ env.REPO_BASEDIR }} && git clone -b ${{ inputs.gitbranch }} --single-branch git@github.com:co-cddo/${{ env.REPO_NAME }}.git ${{ env.REPO_NAME }} \"",
              "su - ssm-user -c \"cd ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }}/app-fast/ && echo "YES" | ./dm-deploy.sh ${{ inputs.AppDeployChoice }} 2>&1 > ${{ env.REPO_BASEDIR }}/log/DEPLOYLOG.${TIMESTAMP}.txt \"",
              "su - ssm-user -c \"aws s3 cp ${{ env.REPO_BASEDIR }}/log/DEPLOYLOG.${TIMESTAMP}.txt s3://${{ env.BUCKET_NAME }}/${{ env.BUCKET_FOLDER }}/${{ inputs.environment }}/DEPLOYLOG.txt \"",
              "#!/bin/bash","if [ -d ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ];then rm -fR ${{ env.REPO_BASEDIR }}/${{ env.REPO_NAME }} ; fi"
              ]}

